language: cpp
compiler:
  - gcc
os:
  - linux
  - osx
dist: xenial
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8
      - libgconf-2-4
services:
  - docker
  - xvfb
env:
  matrix:
    - NODE_NVM_VERSION="6.14.1"
    - NODE_NVM_VERSION="7.10.1"
    - NODE_NVM_VERSION="8.11.1"
    - NODE_NVM_VERSION="9.11.1"
    - NODE_NVM_VERSION="10.8.0"
    - NODE_NVM_VERSION="11.2.0"
    - NODE_NVM_VERSION="12.0.0"
    - ELECTRON_VERSION="1.8.7" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="2.0.7" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="3.0.10" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="3.1.11" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="4.0.8" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="4.1.5" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="4.2.8" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="5.0.9" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="6.0.2" ELECTRON_MOCHA=true
    - MUSL=true NODE_NVM_VERSION="9.11.1"
    - MUSL=true NODE_NVM_VERSION="10.8.0"
    - MUSL=true NODE_NVM_VERSION="11.2.0"
    - MUSL=true NODE_NVM_VERSION="12.0.0"
  global:
    - secure: OLIPa42twxYDfNcpVs9O3HtKa9q73AIvkifhLonrMLP++3EcC5q2ILscJNQHAgH+jEja2/+sktL1d3V91JektsVdCCX/SaON7kfQdpWF6V/TnzsKIP6aUrOmlHMfLjSUHkLKDA9Y8luCsU2StWQL72qs+wkSct1ZNQw5x2PJP/FMonoeN6/Bk85mJ/23NLZtuCA13KfAVAxvZZECUJsj2zfZo1R+wrn6i8scEE8j62v8DBvBY3b3+2g1lAg8osHsyO0aEMx+LrtpO0c0YUZInwIN6yHxDFdmqwGsj/KAIbL6PkNKD+GdPcoJYlbBXJQg8vFlsqYa5uHZMIpIoE2EBjUqptZjXUb12x5qkw6xshlLDOV5gaJWX3dzoALtRkjGujaNqdmiQP/Fsm73wjKR3x/tzGj51HoED2xC8RT1Vxe4Z/Bsm9ivs4cp3UrLkBGkb6/mT07hUDdc9yUrtTZxArNjo8cu/DdVGgQUy5IdubCG/7HioleQAdUP5veQ5x2TxAXedTUAEG7e+O9waYpoyQxmbiwG9F8gtyI7YhB1vOyy4OcpOjEBVWdIGfF7HV6eOQ5RB2AodFXnvPdVsG8BOgfoC+Uh54r/EuWlwDAbM3HUvGqZUWTOoBgAhgh/YhJ5tQ4XI4UmGa8Ni9d8PEtl2k9mShyx23Ke6SqeV8uEg8w=
matrix:
  exclude:
    - os: osx
      env: MUSL=true NODE_NVM_VERSION="9.11.1"
    - os: osx
      env: MUSL=true NODE_NVM_VERSION="10.8.0"
    - os: osx
      env: MUSL=true NODE_NVM_VERSION="11.2.0"
    - os: linux
      env: ELECTRON_VERSION="2.0.7" ELECTRON_MOCHA=true
before_install:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export CXX=g++-4.8; fi
  - if [[ $ELECTRON_VERSION ]]; then
    export npm_config_target=$ELECTRON_VERSION;
    export npm_config_target_arch=x64;
    export npm_config_disturl=https://atom.io/download/electron;
    export npm_config_runtime=electron;
    fi
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  - PUBLISH_BINARY=false
  - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE" && test "${TRAVIS_BRANCH}"
    == "master" && test "${TRAVIS_PULL_REQUEST}" == "false"; then PUBLISH_BINARY=true;
    fi;
  - if [[ $MUSL ]]; then
    EXTRA_NODE_PRE_GYP_FLAGS="--target_libc=musl";
    fi;
  - git clone https://github.com/creationix/nvm.git ../.nvm && source ../.nvm/nvm.sh
  - NODE_NVM_VERSION="${NODE_NVM_VERSION:=11.2.0}"
  - nvm install $NODE_NVM_VERSION
  - nvm use $NODE_NVM_VERSION
  - echo $PUBLISH_BINARY
  - node --version
  - npm --version
  - $CXX --version
install:
  - if [[ $MUSL ]]; then
    scripts/alpine-build.sh;
    else
    npm install --build-from-source;
    fi
before_script:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export DISPLAY=:99.0; fi
script:
  - if [[ $MUSL ]]; then
    scripts/alpine-test.sh ./node_modules/.bin/node-pre-gyp package testpackage $EXTRA_NODE_PRE_GYP_FLAGS;
    elif [[ $ELECTRON_MOCHA ]]; then
    scripts/electron-mocha-test.sh ./node_modules/.bin/node-pre-gyp package testpackage $EXTRA_NODE_PRE_GYP_FLAGS;
    else
    ./node_modules/.bin/node-pre-gyp package testpackage $EXTRA_NODE_PRE_GYP_FLAGS;
    npm test;
    fi
  - if [[ "${PUBLISH_BINARY}" == "true" ]]; then
    ./node_modules/.bin/node-pre-gyp unpublish publish $EXTRA_NODE_PRE_GYP_FLAGS;
    rm -rf {build,binding};
    fi
  - if [[ "${PUBLISH_BINARY}" == "true" && "{$MUSL}" == "true" ]]; then
    ./scripts/alpine-test.sh ./node_modules/.bin/node-pre-gyp install $EXTRA_NODE_PRE_GYP_FLAGS;
    fi
  - if [[ "{PUBLISH_BINARY}" == "true" && "${MUSL}" != "true" ]]; then
    ./node_modules/.bin/node-pre-gyp install $EXTRA_NODE_PRE_GYP_FLAGS;
    npm test;
    fi
deploy:
  provider: releases
  api_key:
    secure: PR6eMT6UtZrUpR5ygOXmmiMmae7KUf2ndoFaD/SgsvhXS2FQds8DqByi9ElO8cTZ5I7ZHWQOeq2nx/kcdtkmuca5S4J8wPdRgmgfYNWZg7ew4C/qS0e9CawLgk1nbYDZYTxiZoSdXIrnkJNNbuWfNEmmBYe12RcBLnJLWCb+cJPJMK2eVJFlOLJsnZ0xnSQckAfKdxHvUamBpA0CQUuVk6p0cMW70W6rraexpoHM2wMgdLgH9vfhrXdfeFcw0fplxf+yDZLXcTJgwarHV65Ysh53/4a7NL8PB7Ek/sd+DjyYQhU8Zw/UgZ9QIsgviH4GvmnF8NmLSiSUHMqBPvkRsqGZxULvxKVgw3tx0TB0/gSDE8eq9fI9h6SnecrVOWtYy5OqnzDJpdAyv5lVKzPhqql2NBlNt4nNo5XwoDI3xuJ3WCmGCiuCn3Zieznk3iDsjjG7WtPszWRhyTDo0wmJfYReIoKnRJwUqYdZR77UmL7/qQSvrMAk2cUtBBDvUAIbh5pq017oDrrSurcnqTtOaq4mRU/JuyS+APjUp1/JqdZs6IP840hVg8LI9/NiidxOJ0e5RGy9NgM965EgwX1jOt4cHjoB1TsOZpREHNjL0IeB2wuYySUieqtMUqNRmkN0SJ2Gy4Fqodh3+FxETzq8pyz/tuUMocWsjqYi0B5w48Q=
  file: "./build/stage/*"
  on:
    tags: true
    repo: julianhille/HummusJS
    branch: feature/github-deployments
  skip_cleanup: 'true'
