language: cpp
compiler:
  - gcc
os:
  - linux
  - osx
dist: xenial
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8
      - libgconf-2-4
services:
  - docker
  - xvfb
env:
  matrix:
    - NODE_NVM_VERSION="6.14.1"
    - NODE_NVM_VERSION="7.10.1"
    - NODE_NVM_VERSION="8.11.1"
    - NODE_NVM_VERSION="9.11.1"
    - NODE_NVM_VERSION="10.8.0"
    - NODE_NVM_VERSION="11.2.0"
    - NODE_NVM_VERSION="12.0.0"
    - ELECTRON_VERSION="1.8.7" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="2.0.7" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="3.0.10" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="3.1.11" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="4.0.8" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="4.1.5" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="4.2.8" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="5.0.9" ELECTRON_MOCHA=true
    - ELECTRON_VERSION="6.0.2" ELECTRON_MOCHA=true
    - MUSL=true NODE_NVM_VERSION="9.11.1"
    - MUSL=true NODE_NVM_VERSION="10.8.0"
    - MUSL=true NODE_NVM_VERSION="11.2.0"
    - MUSL=true NODE_NVM_VERSION="12.0.0"
matrix:
  exclude:
    - os: osx
      env: MUSL=true NODE_NVM_VERSION="9.11.1"
    - os: osx
      env: MUSL=true NODE_NVM_VERSION="10.8.0"
    - os: osx
      env: MUSL=true NODE_NVM_VERSION="11.2.0"
    - os: linux
      env: ELECTRON_VERSION="2.0.7" ELECTRON_MOCHA=true
before_install:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export CXX=g++-4.8; fi
  - if [[ $ELECTRON_VERSION ]]; then
    export npm_config_target=$ELECTRON_VERSION;
    export npm_config_target_arch=x64;
    export npm_config_disturl=https://atom.io/download/electron;
    export npm_config_runtime=electron;
    fi
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  - PUBLISH_BINARY=false
  - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE" && test "${TRAVIS_BRANCH}"
    == "master" && test "${TRAVIS_PULL_REQUEST}" == "false"; then PUBLISH_BINARY=true;
    fi;
  - if [[ $MUSL ]]; then
    EXTRA_NODE_PRE_GYP_FLAGS="--target_libc=musl";
    fi;
  - git clone https://github.com/creationix/nvm.git ../.nvm && source ../.nvm/nvm.sh
  - NODE_NVM_VERSION="${NODE_NVM_VERSION:=11.2.0}"
  - nvm install $NODE_NVM_VERSION
  - nvm use $NODE_NVM_VERSION
  - echo $PUBLISH_BINARY
  - node --version
  - npm --version
  - $CXX --version
install:
  - if [[ $MUSL ]]; then
    scripts/alpine-build.sh;
    else
    npm install --build-from-source;
    fi
before_script:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then export DISPLAY=:99.0; fi
script:
  - if [[ $MUSL ]]; then
    scripts/alpine-test.sh ./node_modules/.bin/node-pre-gyp package testpackage $EXTRA_NODE_PRE_GYP_FLAGS;
    elif [[ $ELECTRON_MOCHA ]]; then
    scripts/electron-mocha-test.sh ./node_modules/.bin/node-pre-gyp package testpackage $EXTRA_NODE_PRE_GYP_FLAGS;
    else
    ./node_modules/.bin/node-pre-gyp package testpackage $EXTRA_NODE_PRE_GYP_FLAGS;
    npm test;
    fi
  - if [[ "${PUBLISH_BINARY}" == "true" ]]; then
    ./node_modules/.bin/node-pre-gyp unpublish publish $EXTRA_NODE_PRE_GYP_FLAGS;
    rm -rf {build,binding};
    fi
  - if [[ "${PUBLISH_BINARY}" == "true" && "{$MUSL}" == "true" ]]; then
    ./scripts/alpine-test.sh ./node_modules/.bin/node-pre-gyp install $EXTRA_NODE_PRE_GYP_FLAGS;
    fi
  - if [[ "{PUBLISH_BINARY}" == "true" && "${MUSL}" != "true" ]]; then
    ./node_modules/.bin/node-pre-gyp install $EXTRA_NODE_PRE_GYP_FLAGS;
    npm test;
    fi
deploy:
 - provider: releases
   file: build/stage/*
   token:
    secure: GxigeheJvaQpZYX2wa/YKBvld9b1EUnBQUCh0shYQSS0sQWVoAVzB58C6E2JsUjz8QmMAnElClMb1E4SkC8j2zxULO5FiC6SsoW+Pr9kCnZjF5bF3N7DyCl0hNt18ytzZe4VggGayxC6wNyGfqAiVA2XiLtpZVAEE76A0yJ7UoE7xzKnXv9fn5+IyrpPJCS6q63MyuVpXK8GC5wyj40t2thuNkByHDVQmyonbctNKeYQ7H5y7A62pT0gkZih3WFl3AAPTDHmZ3MYE2OHgnPpF0hJBDmZv7l9miqQroxyvpALmBJsfT7blvV7h/8T8FCafVq1e+2YNq5+SOzJ+3HVRBvJcMKtfxgtUiLXIRoL6/gP3e2QCrCcn4f0qZFiQcie7EvarK0cQyd7IEUmSYuPfPGbeY4KXjuHHmjYBHC3P1klXQ4iCvcssOVUze85z6NUo64azIAfNzYWEuDtbXkZAxw+FsvTHM7d2EP8ng9PWYvtRslWFsadEyIFCXXVmy4b8UdGJCvhQagbhU3FlJ81U6lz4+ciqoemYMMxlSA4Wkdzif+kar4vMskYBhpsg4PjSSmDjDEAr7WBpRJIHjtpnmOaTtFzOYEscw3bXKN1O41JxTot4RDISMBTjtYeCTlskvUzvdMHvgDOJ8rOMWEhn8v8m0lPDheOSYxy9dF56Ho=
   skip_cleanup: true
   edge: true
   on:
     tags: true
